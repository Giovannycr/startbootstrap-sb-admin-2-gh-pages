const fetch = require('node-fetch');

async function testServerConnection() {
    try {
        console.log('üß™ Probando conexi√≥n al servidor...\n');

        const baseUrl = 'http://localhost:3000';
        const apiUrl = 'http://localhost:3000/api';

        // 1. Probar conexi√≥n b√°sica al servidor
        console.log('1. Probando conexi√≥n b√°sica al servidor...');
        try {
            const response = await fetch(baseUrl);
            if (response.ok) {
                console.log('   ‚úÖ Servidor respondiendo correctamente');
            } else {
                console.log(`   ‚ùå Servidor respondi√≥ con status: ${response.status}`);
            }
        } catch (error) {
            console.log('   ‚ùå No se puede conectar al servidor');
            console.log('   üí° Aseg√∫rate de que el servidor est√© corriendo con: node server.js');
            return;
        }

        // 2. Probar ruta de perfil (sin autenticaci√≥n)
        console.log('\n2. Probando ruta de perfil sin autenticaci√≥n...');
        try {
            const response = await fetch(`${apiUrl}/profile`);
            if (response.status === 401) {
                console.log('   ‚úÖ Ruta protegida correctamente (401 Unauthorized)');
            } else {
                console.log(`   ‚ö†Ô∏è  Ruta respondi√≥ con status: ${response.status}`);
            }
        } catch (error) {
            console.log('   ‚ùå Error al probar ruta de perfil:', error.message);
        }

        // 3. Probar ruta de subida de foto (sin autenticaci√≥n)
        console.log('\n3. Probando ruta de subida de foto sin autenticaci√≥n...');
        try {
            const response = await fetch(`${apiUrl}/profile/photo`, {
                method: 'POST'
            });
            if (response.status === 401) {
                console.log('   ‚úÖ Ruta protegida correctamente (401 Unauthorized)');
            } else {
                console.log(`   ‚ö†Ô∏è  Ruta respondi√≥ con status: ${response.status}`);
            }
        } catch (error) {
            console.log('   ‚ùå Error al probar ruta de foto:', error.message);
        }

        // 4. Verificar que el servidor est√© corriendo en el puerto correcto
        console.log('\n4. Verificando puerto del servidor...');
        console.log('   üí° El servidor debe estar corriendo en: http://localhost:3000');
        console.log('   üí° Si no est√° corriendo, ejecuta en otra terminal:');
        console.log('      cd backend && node server.js');

        console.log('\nüéâ Pruebas de conexi√≥n completadas!');
        console.log('\nüìã Resumen:');
        console.log('   - Servidor: Verificar si est√° corriendo');
        console.log('   - Rutas protegidas: Funcionando correctamente');
        console.log('   - API: Configurada correctamente');

        console.log('\nüí° Para solucionar el error 404:');
        console.log('   1. Abre una nueva terminal');
        console.log('   2. Navega a la carpeta backend: cd backend');
        console.log('   3. Ejecuta el servidor: node server.js');
        console.log('   4. Deber√≠as ver: "Servidor corriendo en el puerto 3000"');

    } catch (error) {
        console.error('‚ùå Error durante las pruebas:', error);
    } finally {
        process.exit(0);
    }
}

testServerConnection(); 